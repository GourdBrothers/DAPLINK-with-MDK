; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\target_reset_nrf51.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\target_reset_nrf51.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_MD -DDAPLINK_VERSION=254 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\target_reset_nrf51.crf ..\..\..\source\family\nordic\target_reset_nrf51.c]
                          THUMB

                          AREA ||i.swd_set_target_reset||, CODE, READONLY, ALIGN=2

                  swd_set_target_reset PROC
;;;27     
;;;28     static void swd_set_target_reset(uint8_t asserted)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;29     {
;;;30         if (asserted) {
;;;31             swd_init_debug();
;;;32     
;;;33             //Set POWER->RESET on NRF to 1
;;;34             if (!swd_write_ap(AP_TAR, 0x40000000 + 0x544)) {
;;;35                 return;
;;;36             }
;;;37     
;;;38             if (!swd_write_ap(AP_DRW, 1)) {
;;;39                 return;
;;;40             }
;;;41     
;;;42             //Hold RESET and SWCLK low for a minimum of 100us
;;;43             if(g_board_info.swd_set_target_reset){
000004  4f16              LDR      r7,|L1.96|
000006  0005              MOVS     r5,r0                 ;29
000008  f44f5400          MOV      r4,#0x2000            ;29
00000c  f44f4680          MOV      r6,#0x4000            ;29
000010  d019              BEQ      |L1.70|
000012  f7fffffe          BL       swd_init_debug
000016  4913              LDR      r1,|L1.100|
000018  2004              MOVS     r0,#4                 ;34
00001a  f7fffffe          BL       swd_write_ap
00001e  2800              CMP      r0,#0                 ;34
000020  d00f              BEQ      |L1.66|
000022  2101              MOVS     r1,#1                 ;38
000024  200c              MOVS     r0,#0xc               ;38
000026  f7fffffe          BL       swd_write_ap
00002a  2800              CMP      r0,#0                 ;38
00002c  d009              BEQ      |L1.66|
00002e  4638              MOV      r0,r7                 ;38
000030  f7fffffe          BL       __aeabi_uread4
000034  0001              MOVS     r1,r0
000036  d001              BEQ      |L1.60|
;;;44                 g_board_info.swd_set_target_reset(asserted);
000038  4628              MOV      r0,r5
00003a  4788              BLX      r1
                  |L1.60|
00003c  480a              LDR      r0,|L1.104|
00003e  6004              STR      r4,[r0,#0]
000040  6006              STR      r6,[r0,#0]
                  |L1.66|
;;;45             }
;;;46             PIN_SWCLK_TCK_CLR();
;;;47             PIN_SWDIO_TMS_CLR();
;;;48             //osDelay(1);
;;;49         } else {
;;;50             PIN_SWCLK_TCK_SET();
;;;51             PIN_SWDIO_TMS_SET();
;;;52             if(g_board_info.swd_set_target_reset){
;;;53                 g_board_info.swd_set_target_reset(asserted);
;;;54             }
;;;55         }
;;;56     }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L1.70|
000046  4808              LDR      r0,|L1.104|
000048  1f00              SUBS     r0,r0,#4
00004a  6004              STR      r4,[r0,#0]
00004c  6006              STR      r6,[r0,#0]
00004e  4638              MOV      r0,r7
000050  f7fffffe          BL       __aeabi_uread4
000054  0001              MOVS     r1,r0                 ;52
000056  d0f4              BEQ      |L1.66|
000058  4628              MOV      r0,r5                 ;53
00005a  e8bd41f0          POP      {r4-r8,lr}            ;53
00005e  4708              BX       r1                    ;53
;;;57     
                          ENDP

                  |L1.96|
                          DCD      g_board_info+0x6e
                  |L1.100|
                          DCD      0x40000544
                  |L1.104|
                          DCD      0x40010c14

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_nordic_nrf51
000000  3601              DCW      0x3601
000002  0200              DCB      0x02,0x00
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      swd_set_target_reset
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\source\\family\\nordic\\target_reset_nrf51.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_target_reset_nrf51_c_378e6560____REV16|
#line 129 "..\\..\\..\\source\\cmsis-core\\core_cmInstr.h"
|__asm___20_target_reset_nrf51_c_378e6560____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_target_reset_nrf51_c_378e6560____REVSH|
#line 144
|__asm___20_target_reset_nrf51_c_378e6560____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
